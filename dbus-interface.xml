<!DOCTYPE node PUBLIC "-//freedesktop//DTD D-BUS Object Introspection 1.0//EN" "http://www.freedesktop.org/standards/dbus/1.0/introspect.dtd">
<node>
    <!-- Main iwd interface, need to use this to get everything else -->
    <interface name="org.freedesktop.DBus.ObjectManager">
        <method name="GetManagedObjects">
            <arg name="objpath_interfaces_and_properties" type="a{oa{sa{sv}}}" direction="out"/>
            <annotation name="org.qtproject.QtDBus.QtTypeName.Out0" value="ManagedObjectList"/>
        </method>
        <signal name="InterfacesAdded">
            <arg name="object_path" type="o"/>
            <arg name="interfaces_and_properties" type="a{sa{sv}}"/>
            <annotation name="org.qtproject.QtDBus.QtTypeName.Out1" value="ManagedObject"/>
        </signal>
        <signal name="InterfacesRemoved">
            <arg name="object_path" type="o"/>
            <arg name="interfaces" type="as"/>
        </signal>
    </interface>

    <!-- wlan interface (e. g. wlan0) -->
    <interface name="net.connman.iwd.Device">
        <property name="Name" type="s" access="read"/>
        <property name="Address" type="s" access="read"/>
        <property name="Powered" type="b" access="readwrite"/>
        <property name="Adapter" type="o" access="read"/>
        <property name="Mode" type="s" access="readwrite"/>
    </interface>

    <!-- Physical adapter (e. g. phy0) -->
    <interface name="net.connman.iwd.Adapter">
        <property name="Powered" type="b" access="readwrite"/>
        <property name="Model" type="s" access="read"/>
        <property name="Vendor" type="s" access="read"/>
        <property name="Name" type="s" access="read"/>
        <property name="SupportedModes" type="as" access="read"/>
    </interface>

    <!-- Available network -->
    <interface name="net.connman.iwd.Network">
        <method name="Connect">
        </method>
        <property name="Name" type="s" access="read"/>
        <property name="Connected" type="b" access="read"/>
        <property name="Device" type="o" access="read"/>

        <!-- possible types: "open", "psk", "8021x" (EAP) -->
        <property name="Type" type="s" access="read"/>
        <property name="KnownNetwork" type="o" access="read"/>
    </interface>

    <!-- Stored network -->
    <interface name="net.connman.iwd.KnownNetwork">
        <method name="Forget" />
        <property name="Name" type="s" access="read"/>

        <!-- possible types: "open", "psk", "8021x" (EAP), "hotspot" -->
        <property name="Type" type="s" access="read"/>
        <property name="Hidden" type="b" access="read"/>
        <property name="AutoConnect" type="b" access="readwrite"/>
        <property name="LastConnectedTime" type="s" access="read"/>
    </interface>

    <interface name="net.connman.iwd.AgentManager">
        <method name="RegisterAgent">
            <arg name="path" type="o" direction="in"/>
        </method>
        <method name="UnregisterAgent">
            <arg name="path" type="o" direction="in"/>
        </method>
    </interface>
    <interface name="net.connman.iwd.Station">
        <method name="ConnectHiddenNetwork">
            <arg name="name" type="s" direction="in"/>
        </method>
        <method name="Disconnect">
        </method>
        <method name="GetOrderedNetworks">
            <arg name="networks" type="a(on)" direction="out"/>
            <annotation name="org.qtproject.QtDBus.QtTypeName.Out0" value="OrderedNetworkList"/>
        </method>
        <method name="GetHiddenAccessPoints">
            <arg name="accesspoints" type="a(sns)" direction="out"/>
            <annotation name="org.qtproject.QtDBus.QtTypeName.Out0" value="QVariantList"/>
        </method>
        <method name="Scan">
        </method>
        <method name="RegisterSignalLevelAgent">
            <arg name="path" type="o" direction="in"/>
            <arg name="levels" type="an" direction="in"/>
            <annotation name="org.qtproject.QtDBus.QtTypeName.In1" value="LevelsList"/>
        </method>
        <method name="UnregisterSignalLevelAgent">
            <arg name="path" type="o" direction="in"/>
        </method>
        <property name="ConnectedNetwork" type="o" access="read"/>
        <property name="Scanning" type="b" access="read"/>
        <property name="State" type="s" access="read"/>
    </interface>
    <interface name="net.connman.iwd.SimpleConfiguration">
        <method name="PushButton">
        </method>
        <method name="GeneratePin">
            <arg name="pin" type="s" direction="out"/>
        </method>
        <method name="StartPin">
            <arg name="pin" type="s" direction="in"/>
        </method>
        <method name="Cancel">
        </method>
    </interface>
    <interface name="net.connman.iwd.SignalLevelAgent">
        <method name="Release">
        </method>
        <method name="Changed">
            <arg name="path" type="o" direction="in"/>
            <arg name="signal" type="y" direction="in"/>
        </method>
    </interface>
    <interface name="org.freedesktop.DBus.Properties">
        <method name="Get">
            <arg type="s" name="interface_name" direction="in"/>
            <arg type="s" name="property_name" direction="in"/>
            <arg type="v" name="value" direction="out"/>
        </method>
        <method name="GetAll">
            <arg type="s" name="interface_name" direction="in"/>
            <arg type="a{sv}" name="properties" direction="out"/>
            <annotation name="org.qtproject.QtDBus.QtTypeName.Out0" value="QVariantMap"/>
        </method>
        <method name="Set">
            <arg type="s" name="interface_name" direction="in"/>
            <arg type="s" name="property_name" direction="in"/>
            <arg type="v" name="value" direction="in"/>
        </method>
        <signal name="PropertiesChanged">
            <arg type="s" name="interface_name"/>
            <arg type="a{sv}" name="changed_properties"/>
            <arg type="as" name="invalidated_properties"/>
            <annotation name="org.qtproject.QtDBus.QtTypeName.Out1" value="QVariantMap"/>
        </signal>
    </interface>
</node>
